(* ============================================================ *)
(* ==     合併模組 Part 8: 世界觀與社會 (World Context)       == *)
(* ==      (已整合 V2.1 與 無目擊修正 V1.1)                == *)
(* ============================================================ *)

(* === Content from: 🌟 綜合聲望與評價系統模組 (reputation_system_comprehensive.ml).ini === *)
(* ==    (V2.1 - 完全整合版, 包含原 Faction Reputation & Faction Details)    == *)
(* ==    (整合了 無目擊修正 V1.1)                                         == *)

# 🌟 綜合聲望、人際關係與劇情模組 (reputation_relationships_drama_v2.1_mod.ml) (*<-- 建議檔名更新*)

## 📘 模組說明
本模組整合並升級了先前獨立的聲望評價、人際關係和劇情關係網模組。旨在建立一個多維度的評價體系，追蹤角色的江湖名聲、陣營立場、道德傾向，並管理角色間的詳細情感關係（好感、仇恨、信任、尊重、義務、特殊關係標記）以及潛在的戲劇性劇情觸發點。V2.1 版本整合了所有內容，並加入了衰減機制、地域性名聲、關係細化、道德判定優化等多項增強。
**V2.1_modified 版本加入了「未被發現的負面行為不影響公開評價」的核心規則。** (* <-- V1.1 更新說明 *)

---

(* --- 模組依賴 (V2.1 更新 + V1.1 修正整合) --- *)
(* 此模組現在依賴更多模組以支持其擴展功能 *)
let reputation_depends_on = [
  "npc_stats_tracker.ml";         (* 記錄 NPC 狀態、關係數值 *)
  "character_attributes.ml";      (* 讀取玩家屬性 (CHA, INT 等) 影響變化 *)
  "emotion_psychology.ml";        (* NPC 即時情緒影響互動效果和關係變化 *)
  "quest_event_system.ml";        (* 觸發關係變化/劇情張力的事件、任務 *)
  "dynamic_random_event_system.ml";(* 隨機事件可能基於聲望/關係觸發，也可能影響它們 *)
  "world_settings.ml";            (* 世界時間影響衰減；地理區域影響地域性名聲 *)
  "map_exploration_system.ml";    (* 區域信息用於地域性名聲和陣營領地判斷 *)
  "skills_proficiency.ml";        (* 社交技能可能影響關係變化 *)
  (* "memory_fragments.ml"; *)      (* (可能已整合入 PC_Data) 涉及過去真相、回憶的劇情觸發 *)
  "story_backup_template.ml";      (* 需要在備份中記錄所有聲望和關係數據 *)
  "faction_details.ml";           (* 【來自V1.1】陣營基礎信息 (雖然下方有定義，明確依賴) *)
  "rumor_gossip_system_v1.2.ml";  (* 【來自V1.1】流言影響評價，評價影響流言 *)
  "**🤫 stealth_detection_system.ml**"; (* 【核心 V1.1 依賴】需要獲取行動的偵測結果 *)
]
;;

---

(* 使用 Map 模組方便按 ID 或 Region 查找 *)
module StringMap = Map.Make(String);;

(* --- 類型定義 (整合) --- *)
type reputation_level = string;;
type faction_standing_level = string;;
type morality_level = string;;

type regional_fame_record = {
  value: int;
  positive: int;
  negative: int;
};;

type faction_standing_record = {
  value: int;
  level: faction_standing_level;
  key_events: string list option;
};;

(* V2.1: 更詳細的關係標記類型 *)
type relationship_flag =
  | IsFamily of string (* 家庭關係類型: "父", "兄長", "表妹" etc. *)
  | IsFriend of float (* 友情強度 0.0-1.0 *)
  | IsSwornSibling of (int * float) (* 結拜排行 and 義氣強度 0.0-1.0 *)
  | IsMarried of float (* 婚姻連結強度 0.0-1.0 *)
  | IsLover of float (* 浪漫情感強度 0.0-1.0 *)
  | IsEnemy of string (* 結仇原因: "殺父之仇", "奪妻之恨", "門派衝突" etc. *)
  | IsRival of string (* 競爭對手類型: "武學", "情場", "生意" etc. *)
  | IsMentor of float (* 師長關係強度 *)
  | IsStudent of float (* 弟子關係強度 *)
  | OwesLifeDebt (* 欠救命之恩 *)
  | IsOwedLifeDebt (* 被欠救命之恩 *)
  | SharesSecret of string (* 共享秘密的標識符/關鍵字 *)
  | BetrayedTrust of string (* 曾被背叛的事件標識符 *)
  | HasHistory of string (* 記錄關鍵互動歷史摘要 *)
  | Subordinate of string (* 新增: 從屬關係描述 *)
  | Colleague of string (* 新增: 同事關係 *)
  | Witnessed of string (* 新增: 目睹事件 *)
  | TaskedWith of string (* 新增: 被委派任務 *)
  | Aware of string (* 新增: 知曉某事 *)
  | Flag of string (* 新增: 通用標記 *)
  | LoveAtFirstSight of string (* 新增: 對特定目標一見鍾情 *)
  | HiddenIdentity of string (* 新增: 隱藏身份類型 *)
  | PassiveAbility of string (* 新增: 被動能力標記 *)
  | BehaviorGoal of string (* 新增: 行為目標 *)
  | Relationship of (string * relationship_record) (* 新增: 記錄對其他NPC的關係 *)
and relationship_record = { (* Note: Recursive type definition needs careful handling in OCaml *)
  affinity: float;
  enmity: float;
  trust: float;
  respect: float;
  flags: relationship_flag list; (* 修正: 將 flags 移到這裡 *)
};;

(* V2.1: 單個角色間的完整關係記錄 - 修正, flags 在這裡 *)
type detailed_relationship_record = {
  affinity: float;            (* 好感度 -100.0 .. 100.0 *)
  enmity: float;              (* 仇恨值 0.0 .. 100.0 *)
  trust: float;               (* 信任度 0.0 .. 1.0 *)
  respect: float;             (* 尊敬度 0.0 .. 1.0 *)
  obligation: float;          (* 恩義/虧欠值 (正為對方欠你, 負為你欠對方) *)
  flags: relationship_flag list; (* 特殊關係標記列表 *)
  has_met: bool;              (* 是否見過面 *)
};;

(* V2.1: 角色對其他所有角色的關係 Map *)
(* 外層 Key: 角色 A 的 ID, 內層 Key: 角色 B 的 ID, Value: 角色 A 對 角色 B 的關係記錄 *)
type inter_character_relationships = detailed_relationship_record StringMap.t StringMap.t;;

(* 【新增 V1.1 修正所需】從 stealth_detection_system.ml 引入或在此定義偵測結果類型 *)
type detection_result = {
  detected : bool;             (* 行動是否被至少一個 NPC 偵測到 *)
  witness_ids : string list;   (* 偵測到行動的 NPC ID 列表 *)
  detection_level : float;     (* 被偵測的清晰程度 (0.0 - 1.0) *)
  evidence_left : string list; (* 行動留下的物理證據描述 *)
  notes: string option;        (* 額外說明 *)
};;

(* --- 1. 🌍 江湖名聲 (Jianghu Fame) - V2.0 升級版 --- *)
let jianghu_fame_system = {
  global_positive_fame = ref 0; (* 使用 ref 方便更新 *)
  global_negative_fame = ref 0;

  calculate_total_fame_score = (fun positive negative -> positive + abs(negative));

  regional_fame = Some (ref StringMap.empty); (* 啟用地域名聲 *)

  levels = [
    (0, "默默無聞 (Unknown)"); (200, "略有所聞"); (500, "小有名氣"); (1000, "江湖聞名");
    (2000, "聲名鵲起"); (4000, "威震一方"); (7000, "名動天下");
    (10000, "蓋世豪俠 / 混世魔王"); (15000, "武林神話 / 萬惡之源")
  ];

  change_rules = {
    base_action_impact = [
      ("完成普通任務", (15, 0)); ("完成重要/困難任務", (70, 0)); ("完成極其重要的史詩任務", (300, 0));
      ("擊敗知名惡人", (150, 10)); ("擊敗正派高手", (50, 100)); ("做出重大善舉 (如賑災)", (400, 0));
      ("做出重大惡行 (如屠村)", (0, 500)); ("獲得武林大會重要名次", (300, 0));
      ("獲得神兵利器 (消息傳出)", (80, 10)); ("創立/覆滅知名門派", (1200, 800));
      ("公開發表影響深遠的言論/著作", (100, 20));
    ];
    visibility_and_spread_modifiers = [
      ("秘密進行且無人知曉", 0.0); ("有少數可靠見證者(可能保密)", 0.2);
      ("僅限特定小圈子知曉", 0.5); ("在城鎮/市集中公開發生", 1.0);
      ("被官府通緝/表彰", 1.8); ("被說書人/江湖傳聞廣泛傳播", 1.5);
      ("留下不可磨滅的證據/痕跡", 1.3);
    ];
    fame_spread_mechanics = "(* 名聲傳播細節: 1.事件發生地點安全等級(越低越易傳播); 2.見證者身份(說書人/官差/商旅/普通百姓 傳播力不同); 3.玩家後續行為(吹噓/隱藏); 4.事件本身轟動程度; AI需綜合判斷 *)";
    morality_match_modifier = "(* 行為與道德匹配度影響正負名聲分配: 善行+高道德->主加正; 惡行+低道德->主加負; 交叉情況效果打折或少量雙加 *)";
    existing_fame_factor = "(* 公式示例: (1 + CurrentTotalFameScore / (MaxFameScore * 0.5) * 0.6)，影響力隨名聲增長，但邊際效應遞減 *)";

    (* --- 【整合 V1.1 修正說明】 --- *)
    detection_conditional_logic = "(* 【V1.1 修正】應用負面名聲影響前，需檢查行動者的 detection_result (來自 stealth_detection_system.ml)。\n   如果 actor_id 為 player_azhai，且行動基礎上會增加 negative_fame：\n   - 若 detection_result.detected = false 且 detection_result.evidence_left 無顯著指向性證據，則:\n     - 本次行動的 negative_fame 增加量應設為 0。\n     - 不應基於此秘密負面行為觸發公開的負面流言 (rumor_gossip_system)。\n   - 可選：若 detected = true 但 detection_level 低，可按比例減輕 negative_fame 懲罰。\n   *)";
  };

  decay_rules = {
    enabled = true; (* 啟用衰減 *)
    decay_rate_per_month = 0.01; (* 每月衰減 1% (數值可調) *)
    decay_threshold = 2000; (* 總名聲低於 2000 時才衰減 *)
    decay_target = "按比例衰減正負名聲"; (* 正負名聲按相同比例減少 *)
    notes = "(* 定期執行衰減計算，保持名聲的動態性 *)";
  };

  effects = [
    "影響陌生 NPC 的初始態度和對話選擇 (需結合道德和陣營判斷)。";
    "高名聲可能引來挑戰者、崇拜者、模仿者或利用你名聲的人。";
    "高正面名聲可能獲得正派人士的幫助、推薦信、特殊待遇、更容易被視為領袖。";
    "高負面名聲可能導致被通緝、被圍攻、被拒絕服務、引來賞金獵人、正派人士的敵視。";
    "觸發與名聲等級相關的特殊事件或任務。";
    "影響加入某些組織/門派的難易度或初始地位。"
  ];
};;

(* --- 2. 🚩 陣營立場 (Faction Standing) - V2.0 升級版 --- *)
let faction_standing_system = {
  standings = ref (StringMap.empty : faction_standing_record StringMap.t); (* 存儲對各陣營的立場 *)
  range = (-100, 100); (* 修改為元組 *)
  default = 0;

  levels = [
    (-100, "死敵 (Sworn Enemy)"); (-70, "敵對 (Hostile)"); (-40, "疏遠/不信任 (Distant/Untrusted)");
    (-10, "中立 (Neutral)"); (11, "友善 (Friendly)"); (41, "信賴 (Trusted Ally)"); (71, "核心盟友 (Core Ally)")
  ];

  change_rules = {
    base_action_value = [
      ("完成該陣營普通任務", 10..20); ("完成該陣營重要任務", 25..50);
      ("攻擊/殺害該陣營普通成員", (-60)..(-25)); ("攻擊/殺害該陣營重要成員/領袖", (-100)..(-70));
      ("幫助該陣營的敵人", (-45)..(-20)); ("幫助該陣營的盟友", 7..18);
      ("公開支持該陣營理念/行動", 8..25); ("公開反對/詆毀該陣營", (-35)..(-15));
      ("贈送該陣營所需/喜愛的物品", 5..15); ("偷竊該陣營財物(被發現)", (-30)..(-15));
      ("摧毀/佔領該陣營據點", (-100)..(-80));
    ];
    target_faction_alignment_modifier = "(* 正道/邪道/中立影響修正 *)";
    player_morality_modifier = "(* 玩家道德與陣營立場是否契合影響修正 *)";
    related_faction_bonus = "(* 攻擊A，影響B(盟友-)、C(敵人+) *)";
    individual_affinity_bonus = {
      condition = "與該陣營領袖/關鍵NPC好感度達到『親密/摯友』或更高";
      modifier_per_event = +2; (* 每次相關正面事件額外+2立場值 *)
      condition_negative = "與該陣營領袖/關鍵NPC關係達到『憎恨』或更低";
      modifier_negative_per_event = -3; (* 每次相關負面事件額外-3立場值 *)
      notes = "(* 個人關係能撬動陣營關係，但影響有限 *)";
    };

    (* --- 【整合 V1.1 修正說明】 --- *)
    detection_conditional_logic = "(* 【V1.1 修正】應用負面陣營立場影響前，需檢查行動者的 detection_result。\n   如果 actor_id 為 player_azhai，且行動基礎上會導致對某陣營的立場下降 (delta < 0)：\n   - 若 detection_result.detected = false 且無顯著指向性證據，則:\n     - 本次行動對該陣營的負面立場變化應設為 0。\n   - 可選：若 detection_level 低，可減輕負面立場懲罰。\n   *)";
  };

  decay_rules = {
    enabled = true;
    decay_rate_per_season = 0.01; (* 每季向 0 點衰減 1% (數值可調) *)
    decay_threshold_min = 11; (* 立場值絕對值 > 10 才衰減 *)
    decay_threshold_max = 70; (* 立場值絕對值 >= 70 (核心盟友/死敵) 不衰減 *)
    notes = "(* 維持關係需要持續投入，核心關係較穩定 *)";
  };

  membership_rules = {
      joining_process = "(* 需滿足陣營前置條件 -> 與關鍵NPC對話表達意願 -> 可能觸發入門任務/考驗 (由 Quest/Event 模組處理) -> 完成後更新陣營歸屬 *)";
      leaving_process = "(* 主動叛門需觸發特定劇情，代價極大。被動驅逐由立場過低或嚴重違規觸發。*)";
      consequences_of_leaving = [
          "立場值變為『死敵』或『敵對』";
          "失去所有陣營特權和身份";
          "觸發陣營追殺任務 (高機率)";
          "部分獨特技能可能被廢除或等級下降 (需技能模組配合)";
          "江湖名聲受損 (通常獲得『叛徒』標籤)";
          "與該陣營相關 NPC 關係惡化";
      ];
  };

  effects = [
    "決定能否安全進入該陣營領地或據點。"; "影響該陣營成員的初始態度、對話和任務。";
    "影響交易價格。"; "高立場可能獲得庇護、支援、資源、技能。";
    "低立場可能遭遇追殺、阻撓、制裁。"; "影響加入/晉升機會。"; "觸發陣營戰爭/結盟事件。"
  ];
};;

(* --- 3.⚖️ 道德評價 (Morality Alignment) - V2.0 升級版 --- *)
let morality_alignment_system = {
  value = ref 0.0; (* -100.0 .. 100.0 *)
  range = (-100.0, 100.0);
  default = 0.0;

  levels = [
    (-100.0, "邪魔外道"); (-70.0, "心術不正"); (-40.0, "行止不堪");
    (-10.0, "亦正亦邪 / 凡夫俗子"); (10.1, "心存善念");
    (40.1, "行俠仗義"); (70.1, "一代宗師 / 聖人化身")
  ];

  change_rules = {
    action_impact = [ (* 調整後影響值 *)
      ("幫助弱小/無辜者", 7.0 .. 20.0); ("維護公道/正義", 12.0 .. 25.0);
      ("信守承諾/重義氣", 6.0 .. 12.0); ("寬恕敵人(非大奸大惡)", 4.0 .. 10.0);
      ("濫殺無辜/折磨他人", (-60.0) .. (-25.0)); ("背信棄義/出賣朋友", (-70.0) .. (-35.0));
      ("偷盜/搶劫 (非惡人平民)", (-30.0) .. (-12.0)); ("偷盜/搶劫 (惡人/不義之財)", (-2.0) .. 2.0);
      ("為了自保殺人 (對手非無辜)", (-5.0) .. 5.0); ("為了自保誤傷/殺害無辜", (-30.0) .. (-15.0));
      ("為救多人犧牲少數(必要性判斷)", (-10.0) .. 10.0);
      ("做出重大善舉/犧牲", 30.0 .. 60.0); (* 提高上限 *)
      ("犯下極端惡行(屠殺/滅門)", (-80.0) .. (-40.0));
      ("公開宣揚/踐行俠義/仁善理念", 5.0 .. 15.0);
      ("公開宣揚/踐行邪惡/殘酷理念", (-20.0) .. (-8.0));
      ("給予他人自由選擇權(如R406)", 50.0); (* 基於先前討論的特殊事件值 *)
      ("威脅殺害服從者(如R406守衛)", -5.0); (* 負面需平衡 *)
    ];
    intention_modifier = "(* 意圖修正: 偽善/無奈之惡 影響 +/- 效果，AI需判斷 *)";
    cumulative_effect = true; (* 長期行為固化傾向，影響單次變化幅度 *)
    grey_area_considerations = [
      "【必要性】: 是否為唯一或最不壞選擇？"; "【目標】: 受害者是誰？";
      "【比例】: 損害與目標是否相稱？"; "【底線】: 是否突破基本道德底線？";
      "【自由意志】: 是否被脅迫？";
    ];

    (* --- 【整合 V1.1 修正說明】 --- *)
    detection_conditional_logic = "(* 【V1.1 修正】應用負面道德影響前，需檢查行動者的 detection_result。\n   如果 actor_id 為 player_azhai，且行動基礎道德影響為負 (delta < 0)：\n   - 若 detection_result.detected = false 且無顯著指向性證據，則:\n     - 本次行動的負面道德變化量應設為 0。\n   - 可選：若 detection_level 低，可減輕負面道德懲罰。\n   *)";
  };

  threshold_effects = [
    (-70.0, "邪氣凜然", "降低正派NPC初始好感度，提高對邪派/混亂NPC威懾/吸引力，解鎖邪派選項");
    (-40.0, "惡名在外", "在城鎮易被盤查，部分商人可能拒絕交易或抬價");
    (40.1, "略有俠名", "易獲平民信任求助，部分正派NPC態度友善");
    (70.1, "俠義之風", "顯著提升正派NPC好感度，可能吸引追隨者，觸發俠義任務/奇遇");
    (* 可添加更多, 如 0.0 時獲得 "洞悉善惡" 短暫 buff? *)
  ];

  effects = [
    "影響 NPC 深層評價和信任度。"; "影響【江湖名聲】的性質。";
    "影響【陣營立場】的變化速率。"; "解鎖/鎖定特定對話、任務、劇情分支。";
    "影響特殊裝備、武功、稱號的獲取/使用。"; "影響特殊 NPC 的交互意願。";
    "觸發特定的道德閾值效果。"
  ];
};;

(* --- 4. 💖 人際關係數值模組 (Personal Relationships) - V2.1 整合升級版 --- *)
(* 注意：V1.1 修正主要針對公開評價 (道德、名聲、陣營)，對直接的私人關係影響較小。 *)
(* 但如果負面行為被 NPC 私下目擊 (即使未公開)，仍應影響該 NPC 對玩家的私人關係。*)
let personal_relationship_system = {

  (* --- 核心數值量表 (使用浮點數) --- *)
  core_values_definitions = {
    affinity = {
      range = (-100.0, 100.0); (* 好感度 *)
      default = 0.0;
      levels = [
        (-100.0, "死敵 (Mortal Enemy)"); (-70.0, "憎恨 (Hated)"); (-40.0, "厭惡 (Disliked)");
        (-10.0, "中立/陌生 (Neutral/Stranger)"); (10.1, "友善 (Friendly)"); (40.1, "信任 (Trusted)");
        (70.1, "親密/摯友 (Close/Best Friend)"); (90.1, "愛慕/忠誠 (Adored/Loyal)")
      ];
      decay_rate_per_month = -0.5; (* 每月若無正面互動，好感度向 0 衰減 0.5 (數值可調) *)
      decay_threshold = 11.0; (* 好感度絕對值 > 10 才衰減 *)
    };
    enmity = {
      range = (0.0, 100.0); (* 仇恨值 *)
      default = 0.0;
      levels = [
        (0.0, "無/輕微不滿"); (10.1, "敵意 (Hostile)"); (40.1, "仇視 (Hateful)");
        (70.1, "深仇 (Deep Hatred)"); (90.1, "死仇 (Blood Feud)")
      ];
      decay_rate_per_month = -0.2; (* 每月若無負面互動，仇恨值向 0 衰減 0.2 (數值可調) *)
      decay_threshold_max = 70.0; (* 深仇大恨 (>=70) 不會自然衰減 *)
    };
    trust = {
      range = (0.0, 1.0); (* 信任度 *)
      default = 0.3; (* 對陌生人或新下屬的基礎信任度較低 *)
      (* 信任度變化因素: 完成承諾/任務(+), 共享秘密(+), 可靠行為(+), 背叛/欺騙(- -), 言行不一(-), 被懷疑(-) *)
    };
    respect = {
      range = (0.0, 1.0); (* 尊敬度 *)
      default = 0.5; (* 基礎尊敬度，受地位/實力影響 *)
      (* 尊敬度變化因素: 展現實力/智慧(+), 公正行為(+), 領導力(+), 言而有信(+), 懦弱/卑劣行為(- -), 公開出醜(-) *)
    };
    obligation = {
      range = (-100.0, 100.0); (* 恩義/虧欠值 *)
      default = 0.0;
      (* 變化因素: 救命之恩(大幅+/-), 給予重大幫助(+/-), 接受重大饋贈(+/-), 違背恩義(- -) *)
      (* 正值: 對方欠你; 負值: 你欠對方 *)
    };
  };

  (* --- 關係狀態標記 (V2.1 擴展) --- *)
  flag_definitions = "(* 參見文件頭部 type relationship_flag 定義 *)";
  flag_synergies_and_conflicts = "(* 標記之間可能存在關聯或衝突，例如 IsMarried 和 IsLover 通常不應同時存在 (除非是特殊劇情)。IsFamily 會影響 Obligation 的基礎值和變化。BetrayedTrust 會極大降低 Trust。*)";

  (* --- 關係記錄結構 (用於存儲實際數據) --- *)
  data_storage_structure = "(* 使用 inter_character_relationships: detailed_relationship_record StringMap.t StringMap.t *)";

  (* --- 數值與狀態變化規則 (V2.1 增補 Trust/Respect/Obligation 考量) --- *)
  change_rules = {
    affinity_change = {
      formula_desc = "AffinityChange = BaseActionValue * TargetPersonalityMod * PlayerCharmMod * SituationMod + SynergyBonus + TrustImpact";
      base_action_values = [
        ("贈送普通禮物", 5.0); ("贈送喜愛禮物", 15.0); ("完成對方委託", 10.0 .. 30.0);
        ("幫助解圍", 20.0); ("出言稱讚 (符合性格)", 3.0 .. 8.0); ("共同戰鬥勝利", 8.0);
        ("深度交談 (成功)", 12.0); ("拯救生命", 50.0 .. 80.0); ("信守承諾", 5.0 .. 10.0);
        ("言辭侮辱", (-25.0) .. (-10.0)); ("輕微失信", (-15.0) .. (-5.0)); ("拒絕幫助 (非必要)", (-10.0) .. (-3.0));
      ];
      target_personality_modifier = "(* 目標性格修正: 慷慨/多疑/傲慢/重情等 *)";
      player_charm_modifier = "(* 玩家魅力修正: e.g., (1 + (PlayerCHA - 10) * 0.05) *)";
      situation_modifier = "(* 情境修正: 公開/私下, 危難相助/利益衝突等 *)";
      synergy_bonus = "(* 關係加成: 已是朋友/家人/愛人等增加基礎值 *)";
      trust_impact = "(* 信任度影響: 高信任度下，正面行為效果略增，負面行為傷害更大；低信任度反之 *)";
    };
    enmity_change = {
      formula_desc = "EnmityChange = BaseActionValue * TargetToleranceMod * WitnessMod + ExistingEnmityAmplifier + BetrayalFactor";
      base_action_values = [
        ("偷竊 (被發現)", 15.0); ("侮辱/嘲諷", 10.0 .. 25.0); ("攻擊對方", 30.0 .. 60.0);
        ("擊殺對方親友/同門", 50.0 .. 90.0); ("背叛承諾/出賣", 60.0 .. 100.0);
        ("搶奪重要物品", 40.0); ("阻礙對方重要目標", 20.0 .. 50.0);
      ];
      target_tolerance_modifier = "(* 目標容忍度修正: 寬容/記仇/暴躁等 *)";
      witness_modifier = "(* 目擊者修正: 公開行兇/侮辱影響更大。 【V1.1 關聯】 此處的『被發現』或『目擊者』直接關聯 detection_result.witness_ids。只有 witness_ids 中的 NPC 會直接產生仇恨。*)";
      existing_enmity_amplifier = "(* 現有仇恨放大: e.g., (1 + CurrentEnmity / 100) *)";
      betrayal_factor = "(* 背叛因素: 若存在高好感度/信任度/特殊關係(家人/愛人/摯友/師徒)，背叛行為導致的仇恨值會極大增加 *)";
    };
    trust_change_factors = [
      "主要通過【言行一致】、【信守承諾】、【完成託付】、【共享秘密】來提升。";
      "通過【欺騙】、【背叛】、【言而無信】、【散播謠言】、【行為可疑】來降低。";
      "提升通常比降低慢，失去信任很容易。";
      "【V1.1 關聯】秘密進行的負面行為即使不影響公開評價，若被特定 NPC 知曉 (witness_ids)，仍會降低該 NPC 的信任度。"
    ];
    respect_change_factors = [
      "主要通過展現【實力】、【智慧】、【領導力】、【公正】、【膽識】、【信譽】來提升。";
      "通過【懦弱】、【卑劣】、【出爾反爾】、【公開受辱/失敗】、【能力不足】來降低。";
      "與好感度相關，但更側重於對對方能力/地位/品格的認可。";
    ];
    obligation_change_factors = [
      "【救命之恩】產生極大的正/負值。";
      "【重大幫助】或【饋贈】產生中等程度的正/負值。";
      "【履行】因恩義產生的責任會減少虧欠值（使負值趨向0）。";
      "【辜負】恩義或【忘恩負義】會產生額外的負面好感/仇恨/信任懲罰。";
      "此數值影響 NPC 是否會主動幫助你，或在你危難時是否會袖手旁觀/落井下石。";
    ];
    state_change_triggers = "(* 觸發成為朋友/結拜/婚配/敵人等狀態，通常需要達到數值閾值，並結合特定任務或事件(由 Quest/Event 模組處理)。例如: Affinity >= 70 + Trust >= 0.6 + 完成共同患難任務 -> 觸發結拜選項事件 *)";
  };

  relationship_effects = [
    "對話: 好感/仇恨/信任/尊敬/關係狀態影響 NPC 語氣、內容、選項。";
    "任務: 解鎖/影響任務(家人求助/朋友委託/仇人陷阱/師門任務)，影響完成方式與獎勵。";
    "交易: 高好感/尊敬可能獲得折扣，高仇恨/低信任可能拒絕交易或抬價。";
    "戰鬥: 盟友(朋友/家人/愛人/師徒)可能支援/治療/合擊；敵人優先攻擊；NPC 是否入隊受好感/信任/尊敬/義務影響。";
    "情報: 高信任 NPC 更願分享秘密/情報/傳授技能。";
    "社交事件: 觸發婚禮、結拜、尋仇、師門會議等。";
    "繼承權: 家人/配偶關係影響遺產。";
    "義務: 親情/師恩/結義/恩情產生責任，影響決策。高 Obligation 可能迫使 NPC 做出不情願的行為。";
    "陣營立場影響: 個人關係可能修正對陣營的立場變化（見 Faction Standing 模組）。";
  ];
};;

(* === 新增區塊： 👨‍👩‍👧‍👦 姓名、家族與親緣關係規則 (Family, Kinship & Naming Rules) === *)
(* 此部分不受 V1.1 修正影響，保持原樣 *)
let family_kinship_rules = {
  name_generation_guidelines = {
    surnames = {
      common_central_plains = ["趙"; "錢"; "孫"; "李"; "周"; "吳"; "鄭"; "王"; "張"; "陳"; "劉"; "楊"; "黃"; "林"; "何"; "高"; "謝"; "宋"; "朱"; "許"];
      common_wuxia = ["郭"; "楊"; "令狐"; "段"; "蕭"; "慕容"; "喬"; "虛"; "任"; "岳"; "林"; "胡"; "苗"; "田"; "狄"; "袁"; "夏"; "溫"];
      rare_or_specific = ["東方"; "西門"; "南宮"; "北堂"; "耶律"; "完顏"; "石"; "閔"; "連城"; "水"; "花"; "上官"]; (* 新增上官 *)
      generation_priority = "中原 > 武俠 > 罕見";
      notes = "AI應根據NPC背景（地域、門派、民族）選擇合適的姓氏。";
    };
    given_names = {
      styles = ["單字", "雙字", "輩分用字", "寓意", "樸實", "女性化", "男性化"];
      taboos = ["避免與傳奇人物完全重名", "避免過於現代化"];
      notes = "名字應符合人物性格、背景和時代感。";
    };
    nicknames_titles = {
      sources = ["外貌特徵", "武功特色", "性格行為", "兵器", "地位職稱", "貶稱"];
      notes = "綽號和頭銜是重要組成部分。";
    };
  };

  kinship_probability_rules = {
    trigger_check_on = ["NewNPCGeneratedInKnownArea", "NPCMeetSameSurnameOrHometown"];
    base_chance_same_surname = 0.03;
    base_chance_same_hometown = 0.02;
    kinship_modifiers = [
      { condition = "location_type == '小村莊' AND distance <= 0", modifier = "* 15.0" };
      { condition = "location_type == '鄉鎮'", modifier = "* 5.0" };
      { condition = "location_type == '大城市'", modifier = "* 0.2" };
      { condition = "surname_rarity == '罕見'", modifier = "* 8.0" };
      { condition = "surname_rarity == '常見'", modifier = "* 0.3" };
      { condition = "clan_id != None AND clan_id == target_npc.clan_id", modifier = "* 20.0" };
      { condition = "generation_diff != None AND abs(generation_diff) <= 1", modifier = "* 3.0" };
      { condition = "faction_id == target_npc.faction_id AND faction_type == '家族式門派'", modifier = "* 4.0" };
    ];
    hometown_affinity_modifiers = [
       { condition = "location_type == '小村莊'", modifier = "+10 Affinity" };
       { condition = "location_type == '大城市'", modifier = "+2 Affinity" };
       { condition = "player_shares_hometown == true", modifier = "+5 Affinity" };
       { condition = "dialect_match == true", modifier = "+3 Affinity" };
    ];
    relationship_type_on_success = [
      ("遠親/同宗", 0.65); ("近親(三代旁系)", 0.25); ("直系(叔伯/表親)", 0.08); ("極近(親兄弟姐妹/父子)", 0.02);
    ];
    family_feud_check = {
      trigger_condition = "clan_id != None AND target_npc.clan_id != None AND world_lore.check_clan_feud(clan_id, target_npc.clan_id)";
      effect_on_feud = "SetRelationship(Affinity: -50..-80, Enmity: +40..+70, Trust: 0.0), AddFlag(IsEnemy('家族世仇'))";
    };
    notes = "AI應在適當時機根據規則進行概率判定，決定是否設定潛在關係或觸發互動。";
  };

  kinship_social_impact = {
    confirmed_kinship_positive = [ "初始好感度/信任度增加", "更容易觸發幫助/饋贈/託付", "家族利益一致時提供支持", "引薦其他家族成員" ];
    confirmed_kinship_negative_feud = [ "初始好感度極低/仇恨值極高", "極易觸發敵對行為", "難以改善關係" ];
    confirmed_hometown_connection = [ "初始好感度/信任度增加", "更容易打聽本地消息", "異鄉相遇有親近感" ];
    suspected_kinship_or_connection = [ "可能觸發試探性對話", "初始態度略友善或更謹慎", "關係變化更敏感" ];
    notes = "具體影響數值由AI根據關係類型、親疏、性格動態調整。";
  };

  family_talent_rules = { (* 可選擴展 *)
    inheritance_chance = 0.1;
    manifestation_conditions = ["成年後", "經歷特定刺激", "修煉家傳武學"];
    talent_examples = [
      "{talent_name: '慕容家傳·鬥轉星移潛質', description: '模仿轉化招式領悟力超常'}";
      "{talent_name: '段氏血脈·一陽指親和', description: '修煉一陽指事半功倍'}";
      (* ... 可添加更多 ... *)
    ];
    effect_on_gameplay = "相關領域屬性/技能成長加成，或解鎖特殊選項/能力。";
    notes = "用於增加背景深度，可在NPC生成時概率性賦予潛在天賦。";
  };

  legendary_kin_rules = { (* 可選擴展 *)
    base_chance = 0.0001; (* 修正為0.01% *)
    surname_match_modifier = "* 10.0";
    region_match_modifier = "* 5.0";
    confirmed_effect = [ "添加特殊關係標記", "初始尊敬度略高", "可能知曉家族內部傳聞", "可能作為引薦契機", "利用身份可能產生負面後果" ];
    notes = "增加趣味性，應極稀有，謹慎處理影響。";
  };

  tagging_rules = {
    confirmation_methods = ["NPC承認", "找到證據(族譜/信物)", "完成調查任務", "劇情揭示"];
    tag_application = "關係確認後，在NPC的 flags 或 known_kinship_links 中添加明確標記。";
    notes = "未確認關係，AI應內部記錄或暗示，不直接標記。";
  };
};;
(* === 姓名、家族與親緣關係規則 區塊結束 === *)


(* --- 5. 🕸️ 劇情關係網模組 (Relationship Drama Web) - V2.1 整合升級版 --- *)
(* 此部分不受 V1.1 修正直接影響，但觸發的劇情可能與秘密行動或被揭露的秘密有關 *)
let relationship_drama_system = {

  relationship_web_data = ref (StringMap.empty : inter_character_relationships StringMap.t); (* 存儲所有角色間的關係數據 *)

  get_relationship = (fun char_a_id char_b_id -> StringMap.find_opt char_b_id (StringMap.find_opt char_a_id !relationship_web_data |? StringMap.empty)); (* 簡易查找函數 *)
  update_relationship = (fun char_a_id char_b_id record ->
    let current_map = StringMap.find_opt char_a_id !relationship_web_data |? StringMap.empty in
    let updated_map = StringMap.add char_b_id record current_map in
    relationship_web_data := StringMap.add char_a_id updated_map !relationship_web_data
    ); (* 簡易更新函數 *)

  potential_drama_plots = [
    ("💔", "三角戀／四角戀", "多角色對同一目標產生高好感/愛慕，引發情感糾葛、競爭。");
    ("🔪", "雙重身份／臥底", "某角色實際身份與表面不同。");
    ("🧨", "背叛與反轉", "在高信任基礎上發生關鍵背叛事件。");
    ("🧬", "血緣謎團", "揭露未知的血緣關係。");
    ("🏦", "家產/繼承權衝突", "家族或組織內部鬥爭。");
    ("💍", "婚姻混亂", "涉及騙婚、逼婚、逃婚、婚外情等。");
    ("🎭", "情感壓抑與誤解", "角色壓抑情感導致行為怪異、產生誤會。");
    ("⚔️", "門派恩怨情仇", "因門派立場導致的衝突、愛情悲劇。");
    ("🤝", "結義反目/考驗", "結拜關係面臨考驗甚至破裂。");
    ("師徒恩怨", "師徒間因理念、武功、情感等產生糾葛。");
    ("復仇執念", "某角色執著於復仇，影響其行為。");
  ];

  trigger_mechanism_notes = "(* 張力劇情的觸發主要由【Quest/Event 系統】或【Dynamic Random Event 系統】根據當前關係數值、標記和特定條件來決定。本模組提供素材庫和判斷依據。*)";
  maintenance_notes = "(* AI需持續更新關係數據，記錄關鍵互動、情感變化、新揭露的秘密/關係標記。 【V1.1 關聯】秘密行動雖然可能不影響公開評價，但若被揭露，可成為劇情觸發點。*)";
};;


(* --- 6. 🔄 模組互動總結 (Interactions Summary) - V2.1 整合版 + V1.1 影響 --- *)
let comprehensive_interactions = {
  reputation_impacts_relationships = "【名聲】和【道德】影響他人初始【好感度】和【尊敬度】。 (* V1.1 注: 若負面名聲/道德因未被發現而未產生，此初始影響亦不存在 *)";
  relationships_impact_reputation = "與高地位/聲望 NPC 的【良好個人關係】可能間接提升【江湖名聲】或【陣營立場】。";
  faction_impacts_relationships = "加入或敵對某【陣營】直接影響與該陣營成員的基礎【好感度】和【信任度】。";
  relationships_impact_faction = "與【陣營】關鍵人物的個人關係變化，可能修正與該陣營的整體【立場】變化。";
  morality_impacts_all = "【道德評價】影響他人解讀【名聲】，影響【陣營】接納度，影響【個人關係】(信任/尊敬)。 (* V1.1 注: 秘密的負面行為不影響公開道德評價，但可能影響知情者的私人信任/好感 *)";
  drama_triggers = "【劇情關係網】的張力點基於【人際關係數值】(高好感/仇恨/標記)和外部【事件/任務】共同觸發。";
  feedback_loop = "系統相互影響：行動 -> (根據 detection_result) 改變聲望/關係/道德 -> 影響 NPC 反應 -> (可能觸發流言/劇情) -> 觸發新事件/任務 -> 帶來新行動機會...";
  stealth_impact = "【V1.1 核心】`stealth_detection_system` 的輸出 `detection_result` 現在是影響負面公開評價 (道德、名聲、陣營立場) 是否生效的關鍵前置條件。未被發現的秘密惡行不應損害玩家的公開形象，也不應觸發相應的公開流言。";
};;

(* --- 補充：陣營詳細資料結構 (來自原 reputation_system 中對 faction_details 的定義) --- *)
(* 此部分不受 V1.1 修正影響，保持原樣 *)
type faction_rank_t = { rank_name: string; level: int; requirements: string list; permissions: string list; };;
type faction_structure_t = { leadership_model: string; current_leader_ids: string list; succession_rules: string; hierarchy_ranks: faction_rank_t list; key_departments: string list option; };;
type faction_membership_t = { recruitment_policy: string; joining_requirements: string list; initiation_process_lore_id: string option; member_benefits: string list; member_duties: string list; rules_and_taboos_summary: string; leaving_consequences_lore_id: string option; };;
type faction_resources_t = { base_location_ids: string list; territory_description: string; estimated_strength: (string * string) list; unique_skills: string list; unique_items: string list; special_knowledge_lore_ids: string list; };;
type faction_relation_entry_t = { target_faction_id: string; relation_type: string; intensity: float; notes: string option; };;
type faction_external_relations_t = { relations_list: faction_relation_entry_t list; public_perception_summary: string; };;
type faction_goals_t = { overall_status: string; short_term_goals: string list; long_term_ambitions: string list; };;
type faction_profile_t = { faction_id: string; name_cn: string; name_en: string; aliases: string list option; type_: string; alignment_philosophy: string; history_summary_lore_id: string option; internal_structure: faction_structure_t; membership: faction_membership_t; resources_capabilities: faction_resources_t; external_relations: faction_external_relations_t; current_status_goals: faction_goals_t; tags: string list option; (* 添加缺失字段 *) };;

(* (概念性) 陣營資料庫 *)
module FactionMap = Map.Make(String);;
let faction_database : faction_profile_t FactionMap.t ref = ref FactionMap.empty;;

(* --- End of Reputation System Comprehensive definition --- *)


(* === Content from: 📜 世界傳說與歷史模組 (world_lore_history_system.ml).ini === *)
(* 此部分不受 V1.1 修正影響，保持原樣 *)

# 📜 世界傳說與歷史模組 (world_lore_history_system.ml)

## 📘 模組說明
本模組負責存儲和管理遊戲世界的背景信息，包括重要的歷史事件、傳說中的人物與地點、神話、預言、文化習俗以及與特定地點、物品或陣營相關的背景知識。這些信息旨在為 AI 提供素材，以豐富遊戲敘事、NPC 對話、物品描述，並可能作為觸發任務或玩家理解世界觀的線索。

---

## ⚙️ 核心機制：信息存取與展現 (Conceptual)
```ml
let lore_access_process = {
  trigger_points = ["玩家與NPC對話(關鍵詞/歷史)", "檢查物品(書籍/古物/碑文)", "探索地點(古蹟)", "學習知識技能", "任務/事件需求", "AI主動引入"];
  retrieval_logic = "根據觸發點關鍵詞/ID在本模組搜索相關『傳說條目』";
  accessibility_check = "檢查條目『可及性/隱秘度』對比玩家狀態(知識技能/位置/關係)";
  presentation_methods = ["NPC講述", "文獻摘錄", "玩家回憶/靈光一閃", "AI描述背景參考"];
  state_update_optional = "玩家獲知重要傳說後，可記錄已知標記，影響後續";
}
;;

📚 傳說條目數據結構 (Lore Entry Structure)
(* 傳說條目關聯實體 *)
type lore_related_entities = {
  npc_ids: string list option;
  location_ids: string list option;
  faction_ids: string list option;
  item_ids: string list option;
  related_lore_ids: string list option;
};;

(* 傳說條目定義 *)
type lore_entry = {
  lore_id: string; (* 條目ID *)
  title_keywords: string; (* 標題關鍵詞 *)
  category: string; (* 分類 *)
  content: string; (* 內容 *)
  accessibility: string; (* 可及性/隱秘度 *)
  source_examples: string list; (* 信息來源範例 *)
  related_entities: lore_related_entities option; (* 關聯實體 *)
  tags: string list; (* 標籤 *)
};;

(* (概念性) 傳說資料庫 *)
module LoreMap = Map.Make(String);;
let lore_database : lore_entry LoreMap.t ref = ref LoreMap.empty;;

(* 範例數據插入函數 (示意) *)
let add_lore_entry (entry: lore_entry) =
  lore_database := LoreMap.add entry.lore_id entry !lore_database
;;

✨ 傳說條目範例庫 (部分)
(* --- 靖康之耻 --- *)
let lore_jingkang : lore_entry = {
  lore_id = "LORE_JINGKANG_INCIDENT_01"; title_keywords = "靖康之耻 | 金人南侵 | 北宋覆滅"; category = "歷史事件";
  content = """百餘年前，北地女真金國大舉南侵，攻破大宋都城汴京，擄走徽欽二帝及大量皇族、臣民，史稱「靖康之耻」。此事件導致北宋滅亡，中原陷入長期戰亂，亦激起無數漢家兒女的抗金熱情與國仇家恨。許多武林門派的興衰、絕世武功的流傳，乃至一些家族的世代恩怨，都與此國破家亡的慘痛歷史息息相關。""";
  accessibility = "普遍知識 (Common Knowledge)"; source_examples = ["書籍 (史書)", "年長NPC講述", "說書人"];
  related_entities = Some { npc_ids=Some ["yue_fei?", "han_shizhong?"]; location_ids=Some ["bianjing_ruins?", "linan_city?"]; faction_ids=Some ["song_dynasty_remnants?", "jin_empire?"]; item_ids=None; related_lore_ids=Some ["LORE_ANTI_JIN_HEROES_01"] };
  tags = ["宋朝", "金國", "戰爭", "國仇家恨", "歷史轉折"];
};;
(* let () = add_lore_entry lore_jingkang;; *)

(* --- 達摩東渡與少林創立 --- *)
let lore_damo_shaolin : lore_entry = {
  lore_id = "LORE_DAMO_SHAOLIN_01"; title_keywords = "達摩 | 菩提達摩 | 少林寺 | 禪宗 | 易筋經 | 洗髓經"; category = "傳奇人物 | 門派歷史";
  content = """相傳南北朝時期，天竺高僧菩提達摩航海東來，歷經艱險抵達中土。後於嵩山少林寺面壁九年，創立禪宗，留下《易筋經》與《洗髓經》兩大神功秘籍。達摩被尊為中土禪宗初祖，少林寺也因此成為武林中的泰山北斗，其武學博大精深，影響深遠。然而，關於達摩祖師的具體事蹟以及兩大神功的真實下落，歷來眾說紛紜，是武林中長久不衰的傳說。""";
  accessibility = "廣泛流傳 (Widely Known)"; source_examples = ["江湖傳聞", "書籍(佛經/武學雜談)", "少林相關NPC"];
  related_entities = Some { npc_ids=Some ["Bodhidharma(legendary)"]; location_ids=Some ["shaolin_temple"]; faction_ids=Some ["shaolin_sect"]; item_ids=Some ["yi_jin_jing(legendary)?", "xi_sui_jing(legendary)?"]; related_lore_ids=Some ["LORE_SHAOLIN_KUNGFU_01"] };
  tags = ["達摩", "少林寺", "禪宗", "易筋經", "洗髓經", "南北朝", "武學起源"];
};;
(* let () = add_lore_entry lore_damo_shaolin;; *)

(* --- 逍遙派之謎 --- *)
let lore_xiaoyao : lore_entry = {
  lore_id = "LORE_XIAOYAO_SECT_MYSTERY_01"; title_keywords = "逍遙派 | 無崖子 | 天山童姥 | 李秋水 | 逍遙御風 | 北冥神功 | 小無相功"; category = "門派歷史 | 秘密";
  content = """逍遙派是一個極為神秘的門派，據傳由逍遙子所創，其門下弟子個個身懷絕技，且精通琴棋書畫、醫卜星象等雜學。其核心武學如「北冥神功」、「小無相功」、「凌波微步」等皆是威力無窮、震古爍今的絕學。然而此派行事低調詭秘，少在江湖走動，且門規森嚴，內部關係複雜，充滿恩怨情仇。關於其傳承、據點以及門人現狀，江湖中知之甚少，多為零星傳聞。""";
  accessibility = "罕見記載 | 秘密 (Secret)"; source_examples = ["特定古籍殘卷", "與逍遙派有關的極少數NPC", "相關奇遇任務"];
  related_entities = Some { npc_ids=Some ["wu_yazi?", "tianshan_tonglao?", "li_qiushui?"]; location_ids=None; faction_ids=Some ["xiaoyao_sect(mysterious)"]; item_ids=None; related_lore_ids=None };
  tags = ["逍遙派", "神秘門派", "絕世武功", "北冥神功", "小無相功", "凌波微步"];
};;
(* let () = add_lore_entry lore_xiaoyao;; *)

(* --- 血刀門的傳聞 --- *)
let lore_bloodsaber : lore_entry = {
  lore_id = "LORE_BLOOD_SABER_SECT_01"; title_keywords = "血刀門 | 血刀老祖 | 血刀大法 | 雪山 | 藏邊"; category = "門派歷史 | 地方傳聞";
  content = """傳聞藏邊雪山中有一個邪派「血刀門」，由血刀老祖創立。其門人行事殘忍，武功詭異霸道，尤以「血刀大法」聞名。血刀門弟子常在藏邊及西域活動，與中原正派多有衝突，被視為邪魔外道。據說其總舵隱藏在極為險峻的雪山深處。近年來血刀門似乎較為沉寂，不知是否有所圖謀，或是內部發生了變故。""";
  accessibility = "地方傳聞 (Local Legend)"; source_examples = ["西域NPC", "江湖人士(提及邪派)", "特定任務"];
  related_entities = Some { npc_ids=Some ["blood_saber_patriarch(legendary)?"]; location_ids=Some ["xueshan_area(tibetan_plateau)"]; faction_ids=Some ["blood_saber_sect"]; item_ids=Some ["blood_saber(weapon)?"]; related_lore_ids=None };
  tags = ["血刀門", "邪派", "藏邊", "雪山", "血刀老祖"];
};;
(* let () = add_lore_entry lore_bloodsaber;; *)

(* --- 關於「俠之大者」的討論 --- *)
let lore_great_hero : lore_entry = {
  lore_id = "LORE_GREAT_HERO_CONCEPT_01"; title_keywords = "俠之大者 | 為國為民 | 俠義精神 | 江湖道義"; category = "文化習俗 | 價值觀";
  content = """在武林中，「俠」之一字意義重大。何為「俠」？有人認為是路見不平拔刀相助，有人認為是快意恩仇瀟灑自在。但更深一層的理解，如郭靖大俠所言，「俠之大者，為國為民」。真正的俠義，不僅在於個人的武勇與恩怨，更在於心懷天下蒼生，肩負起保家衛國的責任。這種理念影響了許多江湖中人，成為他們行事的準則和追求的目標，但也常與個人情感、門派利益發生衝突。如何抉擇，是許多英雄需要面對的難題。""";
  accessibility = "普遍知識 (Common Knowledge)"; source_examples = ["與正派NPC深入交談", "閱讀特定書籍(如英雄傳記)", "劇情觸發"];
  related_entities = Some { npc_ids=Some ["guo_jing(legendary)?"]; location_ids=None; faction_ids=None; item_ids=None; related_lore_ids=Some ["LORE_JINGKANG_INCIDENT_01"] };
  tags = ["俠義", "價值觀", "江湖道義", "為國為民", "郭靖"];
};;
(* let () = add_lore_entry lore_great_hero;; *)

(* --- 前朝寶藏的傳說 --- *)
let lore_treasure : lore_entry = {
  lore_id = "LORE_DYNASTY_TREASURE_01"; title_keywords = "前朝寶藏 | 闖王寶藏 | 龍脈 | 藏寶圖"; category = "地點傳說 | 物品傳說";
  content = """江湖傳言，前朝覆滅之際，有大量的金銀財寶被秘密藏匿起來，等待有緣人發掘，以圖東山再起或用於濟世安民。關於寶藏的地點眾說紛紜，有的說藏於深山古墓，有的說隱於鬧市密室，還有的說與所謂的「龍脈」有關。據說開啟寶藏需要集齊數張神秘的「藏寶圖殘片」。多年來，無數人為了尋找寶藏而奔波，引發了諸多爭鬥與陰謀。""";
  accessibility = "廣泛流傳的秘密 (Widespread Secret)"; source_examples = ["江湖傳聞", "說書人故事", "特定NPC（知情者/尋寶者）", "藏寶圖殘片物品"];
  related_entities = Some { npc_ids=None; location_ids=Some ["various_secret_locations?"]; faction_ids=None; item_ids=Some ["treasure_map_fragment_setX_partY"]; related_lore_ids=None };
  tags = ["寶藏", "傳說", "藏寶圖", "前朝", "龍脈", "財富"];
};;
(* let () = add_lore_entry lore_treasure;; *)

🔗 依賴模組 (Dependencies)
(* 與聲望系統部分的依賴列表有所重疊，實際應用中需統一管理 *)
let lore_depends_on = [
  "world_settings.ml";            (* 世界背景和時間 *)
  "map_exploration_system.ml";    (* 地點信息 *)
  "npc_stats_tracker.ml";         (* NPC 知識庫 *)
  "ai_behavior_system.ml";        (* NPC 行為動機 *)
  "item_consumable_system.ml";    (* 書籍/物品包含信息 *)
  "equipment.ml";                 (* 神兵傳說 *)
  "skills_proficiency.ml";        (* 知識技能影響理解 *)
  "quest_event_system.ml";        (* 任務背景/觸發 *)
  "reputation_system_comprehensive_v2_1_mod.ml"; (* 門派歷史/陣營細節 - 更新檔名 *)
]
;;

📘 使用提示 (AI Guidance)
(*
AI 使用此模組時應注意：
- **動態信息庫:** 靈活提取和呈現信息。
- **自然融入:** 將信息融入對話、描述、任務背景。
- **信息層次:** 根據可及性控制信息釋放。
- **真偽難辨:** 適當引入矛盾或模糊信息。
- **影響決策:** 玩家了解的信息應能影響其判斷。
- **線索關聯:** 利用關聯實體和標籤建立信息網絡。
- **玩家知識追蹤(推薦):** 記錄玩家已知信息，避免重複並用於後續。
*)

(* **【V2.1_modified 整合註釋】**
   本文件已將「綜合聲望、人際關係與劇情模組」的 V2.1 版本與「無目擊修正 V1.1」的核心規則整合。
   - 聲望、道德、陣營立場的負面影響計算，現在需要依賴【潛行與偵測系統】的輸出結果 `detection_result`。
   - PC 執行的負面行為若未被發現且無直接證據，將不會導致公開評價（道德、名聲、陣營立場）下降，也不會觸發相關公開流言。
   - 私人關係（如特定目擊者的好感、信任）仍可能受到影響。
   - 文件保留了 V2.1 的所有詳細結構，以及姓名家族規則和世界傳說模組的內容。
*)

;; (* === End of World Context Merged File === *)